{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP9SiBJsB5zowYbtjkIMQKp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"_Ap22cq8WWKh","executionInfo":{"status":"ok","timestamp":1750248150605,"user_tz":-180,"elapsed":7320,"user":{"displayName":"Nizeyimana Cedrick","userId":"04158721206526703138"}}},"outputs":[],"source":["from IPython import get_ipython\n","from IPython.display import display\n","from sklearn.datasets import load_digits\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout\n","from tensorflow.keras.utils import to_categorical"]},{"cell_type":"code","source":["data = load_digits()\n","X, y = data.data, data.target"],"metadata":{"id":"jRF9RDTNb9Wy","executionInfo":{"status":"ok","timestamp":1750248150623,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nizeyimana Cedrick","userId":"04158721206526703138"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["print(\"shape of X data:\",X.shape)\n","print(\"shape of X data:\",X.shape)\n","print('Number of samples:', X.shape[0])\n","print('Number of features(pixels):', X.shape[1])\n","print(\"shape of y data:\", y.shape)\n","print('Number of classes (digits):', len(np.unique(y)))\n","print('unique classes:', np.unique(y))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JZZCSNqHQU7m","executionInfo":{"status":"ok","timestamp":1750248150647,"user_tz":-180,"elapsed":20,"user":{"displayName":"Nizeyimana Cedrick","userId":"04158721206526703138"}},"outputId":"51c89630-723d-42f5-eac0-3c872c3fb73c"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["shape of X data: (1797, 64)\n","shape of X data: (1797, 64)\n","Number of samples: 1797\n","Number of features(pixels): 64\n","shape of y data: (1797,)\n","Number of classes (digits): 10\n","unique classes: [0 1 2 3 4 5 6 7 8 9]\n"]}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=9, stratify=y)\n","y_train = to_categorical(y_train)\n","y_test = to_categorical(y_test)\n","\n","print(\"\\nShape of X_train:\",X_train.shape)\n","print(\"Shape of X_test:\",X_test.shape)\n","print(\"Shape of y_train_encoded:\", y_train.shape)\n","print(\"shape of Y_test_encode:\", y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fB-e25vhX32Q","executionInfo":{"status":"ok","timestamp":1750248150669,"user_tz":-180,"elapsed":19,"user":{"displayName":"Nizeyimana Cedrick","userId":"04158721206526703138"}},"outputId":"04841c7b-b547-4bd8-895c-a3edd1eb07be"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Shape of X_train: (1437, 64)\n","Shape of X_test: (360, 64)\n","Shape of y_train_encoded: (1437, 10)\n","shape of Y_test_encode: (360, 10)\n"]}]},{"cell_type":"code","source":["# Accessing individual samples from the data attribute\n","for i in range(10):\n","  print(f\"Sample {i}:\\nFeatures:\\n{data.data[i]}\\nTarget: {data.target[i]}\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Eyu0EteVdMLb","executionInfo":{"status":"ok","timestamp":1750248150688,"user_tz":-180,"elapsed":18,"user":{"displayName":"Nizeyimana Cedrick","userId":"04158721206526703138"}},"outputId":"070a8ea1-49aa-419d-a0a6-1eca5e6aeb9a"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample 0:\n","Features:\n","[ 0.  0.  5. 13.  9.  1.  0.  0.  0.  0. 13. 15. 10. 15.  5.  0.  0.  3.\n"," 15.  2.  0. 11.  8.  0.  0.  4. 12.  0.  0.  8.  8.  0.  0.  5.  8.  0.\n","  0.  9.  8.  0.  0.  4. 11.  0.  1. 12.  7.  0.  0.  2. 14.  5. 10. 12.\n","  0.  0.  0.  0.  6. 13. 10.  0.  0.  0.]\n","Target: 0\n","\n","Sample 1:\n","Features:\n","[ 0.  0.  0. 12. 13.  5.  0.  0.  0.  0.  0. 11. 16.  9.  0.  0.  0.  0.\n","  3. 15. 16.  6.  0.  0.  0.  7. 15. 16. 16.  2.  0.  0.  0.  0.  1. 16.\n"," 16.  3.  0.  0.  0.  0.  1. 16. 16.  6.  0.  0.  0.  0.  1. 16. 16.  6.\n","  0.  0.  0.  0.  0. 11. 16. 10.  0.  0.]\n","Target: 1\n","\n","Sample 2:\n","Features:\n","[ 0.  0.  0.  4. 15. 12.  0.  0.  0.  0.  3. 16. 15. 14.  0.  0.  0.  0.\n","  8. 13.  8. 16.  0.  0.  0.  0.  1.  6. 15. 11.  0.  0.  0.  1.  8. 13.\n"," 15.  1.  0.  0.  0.  9. 16. 16.  5.  0.  0.  0.  0.  3. 13. 16. 16. 11.\n","  5.  0.  0.  0.  0.  3. 11. 16.  9.  0.]\n","Target: 2\n","\n","Sample 3:\n","Features:\n","[ 0.  0.  7. 15. 13.  1.  0.  0.  0.  8. 13.  6. 15.  4.  0.  0.  0.  2.\n","  1. 13. 13.  0.  0.  0.  0.  0.  2. 15. 11.  1.  0.  0.  0.  0.  0.  1.\n"," 12. 12.  1.  0.  0.  0.  0.  0.  1. 10.  8.  0.  0.  0.  8.  4.  5. 14.\n","  9.  0.  0.  0.  7. 13. 13.  9.  0.  0.]\n","Target: 3\n","\n","Sample 4:\n","Features:\n","[ 0.  0.  0.  1. 11.  0.  0.  0.  0.  0.  0.  7.  8.  0.  0.  0.  0.  0.\n","  1. 13.  6.  2.  2.  0.  0.  0.  7. 15.  0.  9.  8.  0.  0.  5. 16. 10.\n","  0. 16.  6.  0.  0.  4. 15. 16. 13. 16.  1.  0.  0.  0.  0.  3. 15. 10.\n","  0.  0.  0.  0.  0.  2. 16.  4.  0.  0.]\n","Target: 4\n","\n","Sample 5:\n","Features:\n","[ 0.  0. 12. 10.  0.  0.  0.  0.  0.  0. 14. 16. 16. 14.  0.  0.  0.  0.\n"," 13. 16. 15. 10.  1.  0.  0.  0. 11. 16. 16.  7.  0.  0.  0.  0.  0.  4.\n","  7. 16.  7.  0.  0.  0.  0.  0.  4. 16.  9.  0.  0.  0.  5.  4. 12. 16.\n","  4.  0.  0.  0.  9. 16. 16. 10.  0.  0.]\n","Target: 5\n","\n","Sample 6:\n","Features:\n","[ 0.  0.  0. 12. 13.  0.  0.  0.  0.  0.  5. 16.  8.  0.  0.  0.  0.  0.\n"," 13. 16.  3.  0.  0.  0.  0.  0. 14. 13.  0.  0.  0.  0.  0.  0. 15. 12.\n","  7.  2.  0.  0.  0.  0. 13. 16. 13. 16.  3.  0.  0.  0.  7. 16. 11. 15.\n","  8.  0.  0.  0.  1.  9. 15. 11.  3.  0.]\n","Target: 6\n","\n","Sample 7:\n","Features:\n","[ 0.  0.  7.  8. 13. 16. 15.  1.  0.  0.  7.  7.  4. 11. 12.  0.  0.  0.\n","  0.  0.  8. 13.  1.  0.  0.  4.  8.  8. 15. 15.  6.  0.  0.  2. 11. 15.\n"," 15.  4.  0.  0.  0.  0.  0. 16.  5.  0.  0.  0.  0.  0.  9. 15.  1.  0.\n","  0.  0.  0.  0. 13.  5.  0.  0.  0.  0.]\n","Target: 7\n","\n","Sample 8:\n","Features:\n","[ 0.  0.  9. 14.  8.  1.  0.  0.  0.  0. 12. 14. 14. 12.  0.  0.  0.  0.\n","  9. 10.  0. 15.  4.  0.  0.  0.  3. 16. 12. 14.  2.  0.  0.  0.  4. 16.\n"," 16.  2.  0.  0.  0.  3. 16.  8. 10. 13.  2.  0.  0.  1. 15.  1.  3. 16.\n","  8.  0.  0.  0. 11. 16. 15. 11.  1.  0.]\n","Target: 8\n","\n","Sample 9:\n","Features:\n","[ 0.  0. 11. 12.  0.  0.  0.  0.  0.  2. 16. 16. 16. 13.  0.  0.  0.  3.\n"," 16. 12. 10. 14.  0.  0.  0.  1. 16.  1. 12. 15.  0.  0.  0.  0. 13. 16.\n","  9. 15.  2.  0.  0.  0.  0.  3.  0.  9. 11.  0.  0.  0.  0.  0.  9. 15.\n","  4.  0.  0.  0.  9. 12. 13.  3.  0.  0.]\n","Target: 9\n","\n"]}]},{"cell_type":"code","source":["col = 'red'\n","\n","plt.figure(figsize=(20,4))\n","for i in range(10):\n","  plt.subplot(2,5,i+1)\n","  # Changed 'bray' to 'binary' as 'bray' is not a valid colormap\n","  # Access the i-th image data from data.data and reshape it\n","  plt.imshow(data.data[i].reshape(8,8), cmap='binary')\n","  # Display the corresponding target value for the i-th image\n","  plt.title(f'Digit: {data.target[i]}')\n","  plt.xlabel(col)\n","  plt.ylabel('Image')\n","  # Moved plt.show() outside the loop to display all subplots at once\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":184},"id":"NabIxgDmhOPl","executionInfo":{"status":"ok","timestamp":1750248152248,"user_tz":-180,"elapsed":1543,"user":{"displayName":"Nizeyimana Cedrick","userId":"04158721206526703138"}},"outputId":"6a9284e7-1ab6-4dad-cdf2-728a3338062e"},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x400 with 10 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# model = modeles.Sequential([ # Incorrect\n","# layer.Dense(128, activation='relu', input_shape=(X_train.shape[1],)), # Incorrect\n","# layer.Dropout(0.2), # Incorrect\n","# layer.Dense(64, activation='relu'), # Incorrect\n","# layer.Dropout(0.2), # Incorrect\n","# Corrected the typo in the activation function from 'softimax' to 'softmax'\n","# layer.Dense(10, activation='softmax'), # Incorrect\n","\n","# Corrected code using imported classes directly\n","model = Sequential([\n","    Dense(128, activation='relu', input_shape=(X_train.shape[1],)),\n","    Dropout(0.2),\n","    Dense(64, activation='relu'),\n","    Dropout(0.2),\n","    Dense(10, activation='softmax'),\n","])\n","\n","# Corrected loss function name from 'categorical' to 'categorical_crossentropy'\n","# Corrected metric name from 'accurancy' to 'accuracy'\n","model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"iFv3Q0XbIb8a","executionInfo":{"status":"ok","timestamp":1750248152436,"user_tz":-180,"elapsed":190,"user":{"displayName":"Nizeyimana Cedrick","userId":"04158721206526703138"}},"outputId":"cb196df1-e9ee-4ee5-b83b-f797f9655671"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]},{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │         \u001b[38;5;34m8,320\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout (\u001b[38;5;33mDropout\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │         \u001b[38;5;34m8,256\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m)             │           \u001b[38;5;34m650\u001b[0m │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │         <span style=\"color: #00af00; text-decoration-color: #00af00\">8,320</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">8,256</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">650</span> │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m17,226\u001b[0m (67.29 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">17,226</span> (67.29 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m17,226\u001b[0m (67.29 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">17,226</span> (67.29 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"liJa7-sML_3m","executionInfo":{"status":"ok","timestamp":1750248152482,"user_tz":-180,"elapsed":37,"user":{"displayName":"Nizeyimana Cedrick","userId":"04158721206526703138"}}},"execution_count":9,"outputs":[]}]}